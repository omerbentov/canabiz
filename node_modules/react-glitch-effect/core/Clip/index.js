"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

require("./style.css");

function Clip(_ref) {
  var children = _ref.children,
      _ref$disabled = _ref.disabled,
      disabled = _ref$disabled === void 0 ? false : _ref$disabled,
      duration = _ref.duration,
      iterationCount = _ref.iterationCount,
      _ref$onHover = _ref.onHover,
      onHover = _ref$onHover === void 0 ? false : _ref$onHover,
      onMouseEnter = _ref.onMouseEnter,
      onMouseLeave = _ref.onMouseLeave,
      rest = (0, _objectWithoutProperties2.default)(_ref, ["children", "disabled", "duration", "iterationCount", "onHover", "onMouseEnter", "onMouseLeave"]);
  var refGlitch = (0, _react.useRef)(null);
  (0, _react.useLayoutEffect)(function () {
    initCSSVariables();
  }, [duration, iterationCount]);
  (0, _react.useLayoutEffect)(function () {
    !disabled && !onHover ? addGlitchEffect() : removeGlitchEffect();
  }, [disabled, onHover]);

  var initCSSVariables = function initCSSVariables() {
    var style = refGlitch.current.style;
    duration && style.setProperty('--duration-effect', duration);
    iterationCount && style.setProperty('--iteration-count', iterationCount);
  };

  var handleOnMouseEnter = function handleOnMouseEnter() {
    onMouseEnter && onMouseEnter();
    onHover && addGlitchEffect();
  };

  var handleOnMouseLeave = function handleOnMouseLeave() {
    onMouseLeave && onMouseLeave();
    onHover && removeGlitchEffect();
  };

  var addGlitchEffect = function addGlitchEffect() {
    refGlitch.current.classList.add('glitch');
  };

  var removeGlitchEffect = function removeGlitchEffect() {
    refGlitch.current.classList.remove('glitch');
  };

  return _react.default.createElement("div", (0, _extends2.default)({
    onMouseEnter: handleOnMouseEnter,
    onMouseLeave: handleOnMouseLeave
  }, rest), _react.default.createElement("div", {
    className: "glitch-variables",
    ref: refGlitch
  }, children));
}

var _default = Clip;
exports.default = _default;
Clip.propTypes = {
  children: _propTypes.default.node.isRequired,
  className: _propTypes.default.string,
  disabled: _propTypes.default.bool,
  duration: _propTypes.default.string,
  iterationCount: _propTypes.default.string,
  onHover: _propTypes.default.bool,
  style: _propTypes.default.object
};