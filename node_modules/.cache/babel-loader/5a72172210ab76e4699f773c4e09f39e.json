{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\src\\\\components\\\\StatisticsForProduct.jsx\";\nimport React, { Component } from \"react\";\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBRow, MDBCol, MDBTable, MDBRating } from \"mdbreact\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\n\nvar StatisticsForProducts = /*#__PURE__*/function (_Component) {\n  _inherits(StatisticsForProducts, _Component);\n\n  var _super = _createSuper(StatisticsForProducts);\n\n  function StatisticsForProducts() {\n    var _this;\n\n    _classCallCheck(this, StatisticsForProducts);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      scores: [],\n      comments: [],\n      statistics: [],\n      fetch: true\n    };\n\n    _this.getStatistics = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(product_id) {\n        var url, comments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // fetch comments\n                url = \"http://localhost:3000/comments/byProduct/\".concat(product_id);\n                _context.next = 3;\n                return axios.get(url);\n\n              case 3:\n                comments = _context.sent;\n                _context.next = 6;\n                return _this.setState({\n                  comments: comments.data,\n                  fetch: false\n                });\n\n              case 6:\n                // creating only score array\n                comments.data.forEach(function (comment) {\n                  comment.score.forEach(function (c) {\n                    _this.state.scores.push(c);\n                  });\n                });\n                _this.state.scores = _.groupBy(_this.state.scores, \"title\");\n                console.log(_this.state.scores);\n\n                _.forIn(_this.state.scores, function (multipulScores, key) {\n                  var sum = 0;\n                  multipulScores.forEach(function (singleScore) {\n                    sum += singleScore.value;\n                  });\n                  this.state.statistics.push({\n                    title: key,\n                    value: sum\n                  });\n                });\n\n                console.log(_this.state.statistics); // this.state.scores.forEach((multiValues) => {\n                //   let sum = 0;\n                //   multiValues.forEach((singleValue) => {\n                //     sum += singleValue.value;\n                //   });\n                // });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(StatisticsForProducts, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.props.product_id !== undefined && this.state.fetch) {\n        this.getStatistics(this.props.product_id);\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(MDBCard, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(MDBTable, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }\n      }, \"\\u05E1\\u05D8\\u05D8\\u05D9\\u05E1\\u05D8\\u05D9\\u05E7\\u05D5\\u05EA\")), this.state.statistics.sort(function (a, b) {\n        return a.value >= b.value;\n      }).map(function (rate) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"ml-5\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(MDBRow, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(MDBCardTitle, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }\n        }, rate.title), /*#__PURE__*/React.createElement(MDBRating, {\n          fillColors: [\"red-text\", \"orange-text\", \"yellow-text\", \"lime-text\", \"light-green-text\"],\n          data: [{\n            tooltip: \"Bad\",\n            choosed: rate.value >= 1 && rate.value < 2\n          }, {\n            tooltip: \"Poor\",\n            choosed: rate.value >= 2 && rate.value < 3\n          }, {\n            tooltip: \"Ok\",\n            choosed: rate.value >= 3 && rate.value < 4\n          }, {\n            tooltip: \"Nice\",\n            choosed: rate.value >= 4 && rate.value < 5\n          }, {\n            tooltip: \"Excellent\",\n            choosed: rate.value == 5\n          }],\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }\n        })));\n      }))));\n    }\n  }]);\n\n  return StatisticsForProducts;\n}(Component);\n\nexport default StatisticsForProducts;","map":{"version":3,"sources":["C:/Users/עומר/Desktop/Extra/React/canabiz/src/components/StatisticsForProduct.jsx"],"names":["React","Component","MDBBtn","MDBCard","MDBCardBody","MDBCardImage","MDBCardTitle","MDBCardText","MDBRow","MDBCol","MDBTable","MDBRating","axios","_","StatisticsForProducts","state","scores","comments","statistics","fetch","getStatistics","product_id","url","get","setState","data","forEach","comment","score","c","push","groupBy","console","log","forIn","multipulScores","key","sum","singleScore","value","title","props","undefined","sort","a","b","map","rate","tooltip","choosed"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  MDBBtn,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBCardImage,\r\n  MDBCardTitle,\r\n  MDBCardText,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBTable,\r\n  MDBRating,\r\n} from \"mdbreact\";\r\nimport axios from \"axios\";\r\nimport _ from \"lodash\";\r\n\r\nclass StatisticsForProducts extends Component {\r\n  state = {\r\n    scores: [],\r\n    comments: [],\r\n    statistics: [],\r\n    fetch: true,\r\n  };\r\n\r\n  getStatistics = async (product_id) => {\r\n    // fetch comments\r\n    var url = `http://localhost:3000/comments/byProduct/${product_id}`;\r\n    const comments = await axios.get(url);\r\n    await this.setState({ comments: comments.data, fetch: false });\r\n\r\n    // creating only score array\r\n    comments.data.forEach((comment) => {\r\n      comment.score.forEach((c) => {\r\n        this.state.scores.push(c);\r\n      });\r\n    });\r\n\r\n    this.state.scores = _.groupBy(this.state.scores, \"title\");\r\n    console.log(this.state.scores);\r\n\r\n    _.forIn(this.state.scores, function (multipulScores, key) {\r\n      let sum = 0;\r\n      multipulScores.forEach((singleScore) => {\r\n        sum += singleScore.value;\r\n      });\r\n      this.state.statistics.push({ title: key, value: sum });\r\n    });\r\n\r\n    console.log(this.state.statistics);\r\n\r\n    // this.state.scores.forEach((multiValues) => {\r\n    //   let sum = 0;\r\n    //   multiValues.forEach((singleValue) => {\r\n    //     sum += singleValue.value;\r\n    //   });\r\n    // });\r\n  };\r\n\r\n  render() {\r\n    if (this.props.product_id !== undefined && this.state.fetch) {\r\n      this.getStatistics(this.props.product_id);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <MDBCard>\r\n          <MDBTable>\r\n            <MDBRow>\r\n              <p className=\"text-center\">סטטיסטיקות</p>\r\n            </MDBRow>\r\n            {this.state.statistics\r\n              .sort((a, b) => a.value >= b.value)\r\n              .map((rate) => (\r\n                <div className=\"ml-5\">\r\n                  <MDBRow>\r\n                    <MDBCardTitle>{rate.title}</MDBCardTitle>\r\n                    <MDBRating\r\n                      fillColors={[\r\n                        \"red-text\",\r\n                        \"orange-text\",\r\n                        \"yellow-text\",\r\n                        \"lime-text\",\r\n                        \"light-green-text\",\r\n                      ]}\r\n                      data={[\r\n                        {\r\n                          tooltip: \"Bad\",\r\n                          choosed: rate.value >= 1 && rate.value < 2,\r\n                        },\r\n                        {\r\n                          tooltip: \"Poor\",\r\n                          choosed: rate.value >= 2 && rate.value < 3,\r\n                        },\r\n                        {\r\n                          tooltip: \"Ok\",\r\n                          choosed: rate.value >= 3 && rate.value < 4,\r\n                        },\r\n                        {\r\n                          tooltip: \"Nice\",\r\n                          choosed: rate.value >= 4 && rate.value < 5,\r\n                        },\r\n                        {\r\n                          tooltip: \"Excellent\",\r\n                          choosed: rate.value == 5,\r\n                        },\r\n                      ]}\r\n                    />\r\n                  </MDBRow>\r\n                </div>\r\n              ))}\r\n          </MDBTable>\r\n        </MDBCard>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StatisticsForProducts;\r\n"]},"metadata":{},"sourceType":"module"}