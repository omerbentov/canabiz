{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\src\\\\components\\\\Typed.jsx\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../styles/Typed.css\";\n\nvar Typed = /*#__PURE__*/function (_React$Component) {\n  _inherits(Typed, _React$Component);\n\n  var _super = _createSuper(Typed);\n\n  function Typed() {\n    _classCallCheck(this, Typed);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Typed, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // If you want to pass more options as props, simply add\n      // your desired props to this destructuring assignment.\n      var strings = this.props.strings; // You can pass other options here, such as typing speed, back speed, etc.\n\n      var options = {\n        strings: strings,\n        typeSpeed: 50,\n        backSpeed: 50\n      }; // this.el refers to the <span> in the render() method\n\n      this.typed = new Typed(this.el, options);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // Make sure to destroy Typed instance on unmounting\n      // to prevent memory leaks\n      this.typed.destroy();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return Typed;\n}(React.Component);\n\nexport default Typed;","map":{"version":3,"sources":["C:/Users/עומר/Desktop/Extra/React/canabiz/src/components/Typed.jsx"],"names":["React","Component","ReactDOM","Typed","strings","props","options","typeSpeed","backSpeed","typed","el","destroy"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,qBAAP;;IAEMC,K;;;;;;;;;;;;;wCACgB;AAClB;AACA;AAFkB,UAGVC,OAHU,GAGE,KAAKC,KAHP,CAGVD,OAHU,EAIlB;;AACA,UAAME,OAAO,GAAG;AACdF,QAAAA,OAAO,EAAEA,OADK;AAEdG,QAAAA,SAAS,EAAE,EAFG;AAGdC,QAAAA,SAAS,EAAE;AAHG,OAAhB,CALkB,CAUlB;;AACA,WAAKC,KAAL,GAAa,IAAIN,KAAJ,CAAU,KAAKO,EAAf,EAAmBJ,OAAnB,CAAb;AACD;;;2CAEsB;AACrB;AACA;AACA,WAAKG,KAAL,CAAWE,OAAX;AACD;;;6BAEQ;AACP,0BAAO;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAvBiBX,KAAK,CAACC,S;;AA0B1B,eAAeE,KAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"../styles/Typed.css\";\r\n\r\nclass Typed extends React.Component {\r\n  componentDidMount() {\r\n    // If you want to pass more options as props, simply add\r\n    // your desired props to this destructuring assignment.\r\n    const { strings } = this.props;\r\n    // You can pass other options here, such as typing speed, back speed, etc.\r\n    const options = {\r\n      strings: strings,\r\n      typeSpeed: 50,\r\n      backSpeed: 50,\r\n    };\r\n    // this.el refers to the <span> in the render() method\r\n    this.typed = new Typed(this.el, options);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Make sure to destroy Typed instance on unmounting\r\n    // to prevent memory leaks\r\n    this.typed.destroy();\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"wrap\"></div>;\r\n  }\r\n}\r\n\r\nexport default Typed;\r\n"]},"metadata":{},"sourceType":"module"}