{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\src\\\\components\\\\StatisticsForProduct.jsx\";\nimport React, { Component } from \"react\";\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBRow, MDBCol, MDBTable, MDBRating } from \"mdbreact\";\nimport axios from \"axios\";\nimport _, { round } from \"lodash\";\nimport ProgressBar from \"react-customizable-progressbar\";\n\nvar StatisticsForProducts = /*#__PURE__*/function (_Component) {\n  _inherits(StatisticsForProducts, _Component);\n\n  var _super = _createSuper(StatisticsForProducts);\n\n  function StatisticsForProducts() {\n    var _this;\n\n    _classCallCheck(this, StatisticsForProducts);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      scores: [],\n      comments: [],\n      statistics: [],\n      fetch: true\n    };\n\n    _this.getStatistics = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(product_id) {\n        var url, comments, statistics;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // fetch comments\n                url = \"http://localhost:3000/comments/byProduct/\".concat(product_id);\n                _context.next = 3;\n                return axios.get(url);\n\n              case 3:\n                comments = _context.sent;\n                _context.next = 6;\n                return _this.setState({\n                  comments: comments.data,\n                  fetch: false\n                });\n\n              case 6:\n                // creating only score array\n                comments.data.forEach(function (comment) {\n                  comment.score.forEach(function (c) {\n                    _this.state.scores.push(c);\n                  });\n                }); //take all comments and create new array which every ket is unique title/field\n\n                _this.state.scores = _.groupBy(_this.state.scores, \"title\");\n                console.log(_this.state.scores); // find avarage\n\n                statistics = [];\n\n                _.forIn(_this.state.scores, function (multipulScores, key) {\n                  var sum = 0;\n                  var length = 0;\n                  multipulScores.forEach(function (singleScore) {\n                    sum += singleScore.value;\n                    length++;\n                  });\n                  statistics.push({\n                    title: key,\n                    value: sum / length,\n                    counter: length\n                  });\n                }); //set for render\n\n\n                _this.setState({\n                  statistics\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.getProgressBarColor = function (ratio) {\n      console.log(ratio);\n\n      switch (Math.floor(ratio)) {\n        case 1:\n          return \"red\";\n\n        case 2:\n          return \"yellow\";\n\n        case 3:\n          return \"blue\";\n\n        case 4:\n          return \"green;\";\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(StatisticsForProducts, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.props.product_id !== undefined && this.state.fetch) {\n        this.getStatistics(this.props.product_id);\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: \"70%\",\n          margin: \"auto\",\n          marginTop: 10,\n          marginBottom: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(MDBCard, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginRight: 30,\n          marginTop: 10,\n          marginBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(MDBCardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      }, \"\\u05E1\\u05D8\\u05D8\\u05D9\\u05E1\\u05D8\\u05D9\\u05E7\\u05D5\\u05EA\")), /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }\n      }, this.state.statistics.sort(function (a, b) {\n        return a.value >= b.value;\n      }).map(function (rate, index) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"ml-5\",\n          key: index,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(MDBCol, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(MDBRow, {\n          center: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }\n        }, \"\\u05E6\\u05D9\\u05D5\\u05DF :\", round(rate.value / 5, 2), \"% \")), /*#__PURE__*/React.createElement(MDBRow, {\n          center: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }\n        }, \"\\u05DE\\u05E1 \\u05DE\\u05D3\\u05E8\\u05D2\\u05D9\\u05DD : \", _this2.state.statistics.length)), /*#__PURE__*/React.createElement(ProgressBar, {\n          radius: 50,\n          progress: rate.value,\n          steps: 5,\n          strokeWidth: 4,\n          strokeColor: _this2.getProgressBarColor(rate.value / 5),\n          trackStrokeWidth: 4,\n          pointerRadius: 8,\n          pointerStrokeWidth: 5,\n          pointerStrokeColor: \"black\",\n          initialAnimationDelay: 500,\n          initialAnimation: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 23\n          }\n        })));\n      })))));\n    }\n  }]);\n\n  return StatisticsForProducts;\n}(Component);\n\nexport default StatisticsForProducts;","map":{"version":3,"sources":["C:/Users/עומר/Desktop/Extra/React/canabiz/src/components/StatisticsForProduct.jsx"],"names":["React","Component","MDBBtn","MDBCard","MDBCardBody","MDBCardImage","MDBCardTitle","MDBCardText","MDBRow","MDBCol","MDBTable","MDBRating","axios","_","round","ProgressBar","StatisticsForProducts","state","scores","comments","statistics","fetch","getStatistics","product_id","url","get","setState","data","forEach","comment","score","c","push","groupBy","console","log","forIn","multipulScores","key","sum","length","singleScore","value","title","counter","getProgressBarColor","ratio","Math","floor","props","undefined","width","margin","marginTop","marginBottom","marginRight","sort","a","b","map","rate","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  MDBBtn,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBCardImage,\r\n  MDBCardTitle,\r\n  MDBCardText,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBTable,\r\n  MDBRating,\r\n} from \"mdbreact\";\r\nimport axios from \"axios\";\r\nimport _, { round } from \"lodash\";\r\nimport ProgressBar from \"react-customizable-progressbar\";\r\n\r\nclass StatisticsForProducts extends Component {\r\n  state = {\r\n    scores: [],\r\n    comments: [],\r\n    statistics: [],\r\n    fetch: true,\r\n  };\r\n\r\n  getStatistics = async (product_id) => {\r\n    // fetch comments\r\n    var url = `http://localhost:3000/comments/byProduct/${product_id}`;\r\n    const comments = await axios.get(url);\r\n    await this.setState({ comments: comments.data, fetch: false });\r\n\r\n    // creating only score array\r\n    comments.data.forEach((comment) => {\r\n      comment.score.forEach((c) => {\r\n        this.state.scores.push(c);\r\n      });\r\n    });\r\n\r\n    //take all comments and create new array which every ket is unique title/field\r\n    this.state.scores = _.groupBy(this.state.scores, \"title\");\r\n    console.log(this.state.scores);\r\n\r\n    // find avarage\r\n    var statistics = [];\r\n    _.forIn(this.state.scores, function (multipulScores, key) {\r\n      let sum = 0;\r\n      let length = 0;\r\n      multipulScores.forEach((singleScore) => {\r\n        sum += singleScore.value;\r\n        length++;\r\n      });\r\n      statistics.push({ title: key, value: sum / length, counter: length });\r\n    });\r\n\r\n    //set for render\r\n    this.setState({ statistics });\r\n  };\r\n\r\n  getProgressBarColor = (ratio) => {\r\n    console.log(ratio);\r\n    switch (Math.floor(ratio)) {\r\n      case 1:\r\n        return \"red\";\r\n      case 2:\r\n        return \"yellow\";\r\n      case 3:\r\n        return \"blue\";\r\n      case 4:\r\n        return \"green;\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.props.product_id !== undefined && this.state.fetch) {\r\n      this.getStatistics(this.props.product_id);\r\n    }\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          width: \"70%\",\r\n          margin: \"auto\",\r\n          marginTop: 10,\r\n          marginBottom: 20,\r\n        }}\r\n      >\r\n        <MDBCard>\r\n          <div\r\n            style={{\r\n              marginRight: 30,\r\n              marginTop: 10,\r\n              marginBottom: 10,\r\n            }}\r\n          >\r\n            <MDBRow>\r\n              <MDBCardTitle>סטטיסטיקות</MDBCardTitle>\r\n            </MDBRow>\r\n            <MDBRow>\r\n              {this.state.statistics\r\n                .sort((a, b) => a.value >= b.value)\r\n                .map((rate, index) => (\r\n                  <div className=\"ml-5\" key={index}>\r\n                    <MDBCol>\r\n                      <MDBRow center>\r\n                        <h3>ציון :{round(rate.value / 5, 2)}% </h3>\r\n                      </MDBRow>\r\n                      <MDBRow center>\r\n                        <h4>מס מדרגים : {this.state.statistics.length}</h4>\r\n                      </MDBRow>\r\n                      <ProgressBar\r\n                        radius={50}\r\n                        progress={rate.value}\r\n                        steps={5}\r\n                        strokeWidth={4}\r\n                        strokeColor={this.getProgressBarColor(rate.value / 5)}\r\n                        trackStrokeWidth={4}\r\n                        pointerRadius={8}\r\n                        pointerStrokeWidth={5}\r\n                        pointerStrokeColor=\"black\"\r\n                        initialAnimationDelay={500}\r\n                        initialAnimation={true}\r\n                      ></ProgressBar>\r\n                    </MDBCol>\r\n                  </div>\r\n                ))}\r\n            </MDBRow>\r\n          </div>\r\n        </MDBCard>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StatisticsForProducts;\r\n"]},"metadata":{},"sourceType":"module"}