{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\src\\\\components\\\\AddComment.jsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { MDBBtn, MDBContainer, MDBCard, MDBInput, MDBRating, MDBTable, MDBRow, MDBCol, MDBCardTitle } from \"mdbreact\";\n\nvar AddComment = /*#__PURE__*/function (_React$Component) {\n  _inherits(AddComment, _React$Component);\n\n  var _super = _createSuper(AddComment);\n\n  function AddComment() {\n    var _this;\n\n    _classCallCheck(this, AddComment);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      comment: {\n        title: \"\",\n        message: \"\"\n      },\n      score: []\n    };\n    _this.postComment = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"in\");\n              _context.next = 3;\n              return axios.post(\"http://localhost:3000/comments\", _this.comment);\n\n            case 3:\n              res = _context.sent;\n              console.log(res);\n              _this.state = _objectSpread({}, res);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.handleSubmit = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n        var errorMessage, addComment, response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                e.preventDefault();\n\n                if (_this.state.comment.message == \"\") {\n                  alert(\"אנא הזן כותרת ותגובה  :) \");\n                }\n\n                addComment = _this.props.addComment;\n                addComment({\n                  _id: null,\n                  product_id: _this.props.product_id,\n                  user_id: 2,\n                  title: _this.state.comment.title,\n                  message: _this.state.comment.message,\n                  score: _this.state.score,\n                  date: \"Added just now...\"\n                });\n                _context2.prev = 4;\n                _context2.next = 7;\n                return axios.post(\"http://localhost:3000/comments\", {\n                  product_id: _this.props.product_id,\n                  user_id: 2,\n                  title: _this.state.comment.title,\n                  message: _this.state.comment.message,\n                  score: _this.state.score\n                });\n\n              case 7:\n                response = _context2.sent;\n                // reset\n                _this.state.comment.title = \"\";\n                _this.state.comment.message = \"\";\n                _this.state.score = [];\n                alert(response.data);\n                _context2.next = 17;\n                break;\n\n              case 14:\n                _context2.prev = 14;\n                _context2.t0 = _context2[\"catch\"](4);\n                alert(_context2.t0);\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[4, 14]]);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.handleTextChange = function (e) {\n      var comment = _objectSpread({}, _this.state.comment);\n\n      comment[e.currentTarget.name] = e.currentTarget.value;\n\n      _this.setState({\n        comment\n      });\n\n      console.log(comment);\n    };\n\n    _this.handleRateChange = function (e) {\n      var exists = false;\n      var score = _this.state.score;\n\n      if (_this.state.score.length > 0) {\n        _this.state.score.forEach(function (element) {\n          if (element.title == e.title) {\n            element.value = e.value;\n            exists = true;\n          }\n        });\n      }\n\n      if (e.value && !exists) {\n        score.push({\n          title: e.title,\n          value: e.value\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(AddComment, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxWidth: \"20%\",\n          maxHeight: \"30%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(MDBCard, {\n        className: \"mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginRight: 30,\n          marginTop: 10,\n          marginBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \" position-relative text-center black-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }, \"\\u05D4\\u05D5\\u05E1\\u05E3 \\u05EA\\u05D2\\u05D5\\u05D1\\u05D4\"), /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(MDBInput, {\n        background: true,\n        label: \"\\u05EA\\u05D2\\u05D5\\u05D1\\u05D4\",\n        size: \"sm\",\n        type: \"textarea\",\n        ref: this.title,\n        name: \"message\",\n        value: this.state.comment.message,\n        onChange: this.handleTextChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }\n      })), this.props.commentsCategories.map(function (category, index) {\n        return /*#__PURE__*/React.createElement(MDBRow, {\n          key: index,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"h6\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }\n        }, category), /*#__PURE__*/React.createElement(MDBRating, {\n          iconSize: \"1x\",\n          key: index * 100,\n          fillColors: [\"red-text\", \"orange-text\", \"yellow-text\", \"lime-text\", \"light-green-text\"],\n          data: [{\n            tooltip: category\n          }, {\n            tooltip: category\n          }, {\n            tooltip: category\n          }, {\n            tooltip: category\n          }, {\n            tooltip: category\n          }],\n          getValue: _this2.handleRateChange.bind(category),\n          name: category,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }\n        }));\n      }), /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(MDBBtn, {\n        color: \"white\",\n        className: \"text-center\",\n        onClick: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }\n      }, \"\\u05D4\\u05D2\\u05D1\"))))));\n    }\n  }]);\n\n  return AddComment;\n}(React.Component);\n\nexport default AddComment;","map":{"version":3,"sources":["C:/Users/עומר/Desktop/Extra/React/canabiz/src/components/AddComment.jsx"],"names":["React","axios","MDBBtn","MDBContainer","MDBCard","MDBInput","MDBRating","MDBTable","MDBRow","MDBCol","MDBCardTitle","AddComment","state","comment","title","message","score","postComment","console","log","post","res","handleSubmit","e","preventDefault","alert","addComment","props","_id","product_id","user_id","date","response","data","handleTextChange","currentTarget","name","value","setState","handleRateChange","exists","length","forEach","element","push","maxWidth","maxHeight","marginRight","marginTop","marginBottom","commentsCategories","map","category","index","tooltip","bind","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,MADF,EAEEC,YAFF,EAGEC,OAHF,EAIEC,QAJF,EAKEC,SALF,EAMEC,QANF,EAOEC,MAPF,EAQEC,MARF,EASEC,YATF,QAUO,UAVP;;IAYMC,U;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,EADA;AAEPC,QAAAA,OAAO,EAAE;AAFF,OADH;AAKNC,MAAAA,KAAK,EAAE;AALD,K;UAQRC,W,yEAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AACZC,cAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AADY;AAAA,qBAEMlB,KAAK,CAACmB,IAAN,CAChB,gCADgB,EAEhB,MAAKP,OAFW,CAFN;;AAAA;AAENQ,cAAAA,GAFM;AAOZH,cAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACA,oBAAKT,KAAL,qBAAkBS,GAAlB;;AARY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UAWdC,Y;2EAAe,kBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACbA,gBAAAA,CAAC,CAACC,cAAF;;AAGA,oBAAI,MAAKZ,KAAL,CAAWC,OAAX,CAAmBE,OAAnB,IAA8B,EAAlC,EAAsC;AACpCU,kBAAAA,KAAK,CAAC,2BAAD,CAAL;AACD;;AAEOC,gBAAAA,UARK,GAQU,MAAKC,KARf,CAQLD,UARK;AASbA,gBAAAA,UAAU,CAAC;AACTE,kBAAAA,GAAG,EAAE,IADI;AAETC,kBAAAA,UAAU,EAAE,MAAKF,KAAL,CAAWE,UAFd;AAGTC,kBAAAA,OAAO,EAAE,CAHA;AAIThB,kBAAAA,KAAK,EAAE,MAAKF,KAAL,CAAWC,OAAX,CAAmBC,KAJjB;AAKTC,kBAAAA,OAAO,EAAE,MAAKH,KAAL,CAAWC,OAAX,CAAmBE,OALnB;AAMTC,kBAAAA,KAAK,EAAE,MAAKJ,KAAL,CAAWI,KANT;AAOTe,kBAAAA,IAAI,EAAE;AAPG,iBAAD,CAAV;AATa;AAAA;AAAA,uBAoBY9B,KAAK,CAACmB,IAAN,CAAW,gCAAX,EAA6C;AAClES,kBAAAA,UAAU,EAAE,MAAKF,KAAL,CAAWE,UAD2C;AAElEC,kBAAAA,OAAO,EAAE,CAFyD;AAGlEhB,kBAAAA,KAAK,EAAE,MAAKF,KAAL,CAAWC,OAAX,CAAmBC,KAHwC;AAIlEC,kBAAAA,OAAO,EAAE,MAAKH,KAAL,CAAWC,OAAX,CAAmBE,OAJsC;AAKlEC,kBAAAA,KAAK,EAAE,MAAKJ,KAAL,CAAWI;AALgD,iBAA7C,CApBZ;;AAAA;AAoBLgB,gBAAAA,QApBK;AA4BX;AACA,sBAAKpB,KAAL,CAAWC,OAAX,CAAmBC,KAAnB,GAA2B,EAA3B;AACA,sBAAKF,KAAL,CAAWC,OAAX,CAAmBE,OAAnB,GAA6B,EAA7B;AACA,sBAAKH,KAAL,CAAWI,KAAX,GAAmB,EAAnB;AACAS,gBAAAA,KAAK,CAACO,QAAQ,CAACC,IAAV,CAAL;AAhCW;AAAA;;AAAA;AAAA;AAAA;AAkCXR,gBAAAA,KAAK,cAAL;;AAlCW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;UAsCfS,gB,GAAmB,UAACX,CAAD,EAAO;AACxB,UAAMV,OAAO,qBAAQ,MAAKD,KAAL,CAAWC,OAAnB,CAAb;;AACAA,MAAAA,OAAO,CAACU,CAAC,CAACY,aAAF,CAAgBC,IAAjB,CAAP,GAAgCb,CAAC,CAACY,aAAF,CAAgBE,KAAhD;;AACA,YAAKC,QAAL,CAAc;AAAEzB,QAAAA;AAAF,OAAd;;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACD,K;;UAED0B,gB,GAAmB,UAAChB,CAAD,EAAO;AACxB,UAAIiB,MAAM,GAAG,KAAb;AACA,UAAMxB,KAAK,GAAG,MAAKJ,KAAL,CAAWI,KAAzB;;AACA,UAAI,MAAKJ,KAAL,CAAWI,KAAX,CAAiByB,MAAjB,GAA0B,CAA9B,EAAiC;AAC/B,cAAK7B,KAAL,CAAWI,KAAX,CAAiB0B,OAAjB,CAAyB,UAACC,OAAD,EAAa;AACpC,cAAIA,OAAO,CAAC7B,KAAR,IAAiBS,CAAC,CAACT,KAAvB,EAA8B;AAC5B6B,YAAAA,OAAO,CAACN,KAAR,GAAgBd,CAAC,CAACc,KAAlB;AACAG,YAAAA,MAAM,GAAG,IAAT;AACD;AACF,SALD;AAMD;;AAED,UAAIjB,CAAC,CAACc,KAAF,IAAW,CAACG,MAAhB,EAAwB;AACtBxB,QAAAA,KAAK,CAAC4B,IAAN,CAAW;AAAE9B,UAAAA,KAAK,EAAES,CAAC,CAACT,KAAX;AAAkBuB,UAAAA,KAAK,EAAEd,CAAC,CAACc;AAA3B,SAAX;AACD;AACF,K;;;;;;;6BAEQ;AAAA;;AACP,0BACE;AAAK,QAAA,KAAK,EAAE;AAAEQ,UAAAA,QAAQ,EAAE,KAAZ;AAAmBC,UAAAA,SAAS,EAAE;AAA9B,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,WAAW,EAAE,EADR;AAELC,UAAAA,SAAS,EAAE,EAFN;AAGLC,UAAAA,YAAY,EAAE;AAHT,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOE;AAAI,QAAA,SAAS,EAAC,2CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEAPF,eAsBE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,QAAD;AACE,QAAA,UAAU,MADZ;AAEE,QAAA,KAAK,EAAC,gCAFR;AAGE,QAAA,IAAI,EAAC,IAHP;AAIE,QAAA,IAAI,EAAC,UAJP;AAKE,QAAA,GAAG,EAAE,KAAKnC,KALZ;AAME,QAAA,IAAI,EAAC,SANP;AAOE,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,OAAX,CAAmBE,OAP5B;AAQE,QAAA,QAAQ,EAAE,KAAKmB,gBARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAtBF,EAkCG,KAAKP,KAAL,CAAWuB,kBAAX,CAA8BC,GAA9B,CAAkC,UAACC,QAAD,EAAWC,KAAX;AAAA,4BACjC,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAEA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,QAAL,CADF,eAEE,oBAAC,SAAD;AACE,UAAA,QAAQ,EAAC,IADX;AAEE,UAAA,GAAG,EAAEC,KAAK,GAAG,GAFf;AAGE,UAAA,UAAU,EAAE,CACV,UADU,EAEV,aAFU,EAGV,aAHU,EAIV,WAJU,EAKV,kBALU,CAHd;AAUE,UAAA,IAAI,EAAE,CACJ;AACEC,YAAAA,OAAO,EAAEF;AADX,WADI,EAIJ;AACEE,YAAAA,OAAO,EAAEF;AADX,WAJI,EAOJ;AACEE,YAAAA,OAAO,EAAEF;AADX,WAPI,EAUJ;AACEE,YAAAA,OAAO,EAAEF;AADX,WAVI,EAaJ;AACEE,YAAAA,OAAO,EAAEF;AADX,WAbI,CAVR;AA2BE,UAAA,QAAQ,EAAE,MAAI,CAACb,gBAAL,CAAsBgB,IAAtB,CAA2BH,QAA3B,CA3BZ;AA4BE,UAAA,IAAI,EAAEA,QA5BR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CADiC;AAAA,OAAlC,CAlCH,eAqEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAC,OADR;AAEE,QAAA,SAAS,EAAC,aAFZ;AAGE,QAAA,OAAO,EAAE,KAAK9B,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CADF,CArEF,CADF,CADF,CADF;AAuFD;;;;EA1KsBtB,KAAK,CAACwD,S;;AA6K/B,eAAe7C,UAAf","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  MDBBtn,\r\n  MDBContainer,\r\n  MDBCard,\r\n  MDBInput,\r\n  MDBRating,\r\n  MDBTable,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBCardTitle,\r\n} from \"mdbreact\";\r\n\r\nclass AddComment extends React.Component {\r\n  state = {\r\n    comment: {\r\n      title: \"\",\r\n      message: \"\",\r\n    },\r\n    score: [],\r\n  };\r\n\r\n  postComment = async () => {\r\n    console.log(\"in\");\r\n    const res = await axios.post(\r\n      \"http://localhost:3000/comments\",\r\n      this.comment\r\n    );\r\n\r\n    console.log(res);\r\n    this.state = { ...res };\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    let errorMessage;\r\n    if (this.state.comment.message == \"\") {\r\n      alert(\"אנא הזן כותרת ותגובה  :) \");\r\n    }\r\n\r\n    const { addComment } = this.props;\r\n    addComment({\r\n      _id: null,\r\n      product_id: this.props.product_id,\r\n      user_id: 2,\r\n      title: this.state.comment.title,\r\n      message: this.state.comment.message,\r\n      score: this.state.score,\r\n      date: \"Added just now...\",\r\n    });\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:3000/comments\", {\r\n        product_id: this.props.product_id,\r\n        user_id: 2,\r\n        title: this.state.comment.title,\r\n        message: this.state.comment.message,\r\n        score: this.state.score,\r\n      });\r\n\r\n      // reset\r\n      this.state.comment.title = \"\";\r\n      this.state.comment.message = \"\";\r\n      this.state.score = [];\r\n      alert(response.data);\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  };\r\n\r\n  handleTextChange = (e) => {\r\n    const comment = { ...this.state.comment };\r\n    comment[e.currentTarget.name] = e.currentTarget.value;\r\n    this.setState({ comment });\r\n    console.log(comment);\r\n  };\r\n\r\n  handleRateChange = (e) => {\r\n    var exists = false;\r\n    const score = this.state.score;\r\n    if (this.state.score.length > 0) {\r\n      this.state.score.forEach((element) => {\r\n        if (element.title == e.title) {\r\n          element.value = e.value;\r\n          exists = true;\r\n        }\r\n      });\r\n    }\r\n\r\n    if (e.value && !exists) {\r\n      score.push({ title: e.title, value: e.value });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ maxWidth: \"20%\", maxHeight: \"30%\" }}>\r\n        <MDBCard className=\"mt-5\">\r\n          <div\r\n            style={{\r\n              marginRight: 30,\r\n              marginTop: 10,\r\n              marginBottom: 10,\r\n            }}\r\n          >\r\n            <h4 className=\" position-relative text-center black-text\">\r\n              הוסף תגובה\r\n            </h4>\r\n            {/* <MDBRow className=\"ml-3\">\r\n            <MDBInput\r\n              size=\"lg\"\r\n              background\r\n              label=\"כותרת\"\r\n              type=\"text\"\r\n              ref={this.title}\r\n              name=\"title\"\r\n              value={this.state.comment.title}\r\n              onChange={this.handleTextChange}\r\n            ></MDBInput>\r\n          </MDBRow> */}\r\n            <MDBRow>\r\n              <MDBInput\r\n                background\r\n                label=\"תגובה\"\r\n                size=\"sm\"\r\n                type=\"textarea\"\r\n                ref={this.title}\r\n                name=\"message\"\r\n                value={this.state.comment.message}\r\n                onChange={this.handleTextChange}\r\n              ></MDBInput>\r\n            </MDBRow>\r\n            {this.props.commentsCategories.map((category, index) => (\r\n              <MDBRow key={index}>\r\n                <h6>{category}</h6>\r\n                <MDBRating\r\n                  iconSize=\"1x\"\r\n                  key={index * 100}\r\n                  fillColors={[\r\n                    \"red-text\",\r\n                    \"orange-text\",\r\n                    \"yellow-text\",\r\n                    \"lime-text\",\r\n                    \"light-green-text\",\r\n                  ]}\r\n                  data={[\r\n                    {\r\n                      tooltip: category,\r\n                    },\r\n                    {\r\n                      tooltip: category,\r\n                    },\r\n                    {\r\n                      tooltip: category,\r\n                    },\r\n                    {\r\n                      tooltip: category,\r\n                    },\r\n                    {\r\n                      tooltip: category,\r\n                    },\r\n                  ]}\r\n                  getValue={this.handleRateChange.bind(category)}\r\n                  name={category}\r\n                />\r\n              </MDBRow>\r\n            ))}\r\n            <MDBRow>\r\n              <div className=\"text-center\">\r\n                <MDBBtn\r\n                  color=\"white\"\r\n                  className=\"text-center\"\r\n                  onClick={this.handleSubmit}\r\n                >\r\n                  הגב\r\n                </MDBBtn>\r\n              </div>\r\n            </MDBRow>\r\n          </div>\r\n        </MDBCard>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddComment;\r\n"]},"metadata":{},"sourceType":"module"}