{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u05E2\\u05D5\\u05DE\\u05E8\\\\Desktop\\\\Extra\\\\React\\\\canabiz\\\\src\\\\components\\\\AddComment.jsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport httpService from \"../services/httpService\";\nimport _ from \"lodash\";\nimport { MDBBtn, MDBContainer, MDBCard, MDBInput, MDBRating, MDBTable, MDBRow, MDBCol, MDBCardTitle } from \"mdbreact\";\nimport jwtService from \"../services/jwtService\";\n\nvar AddComment = /*#__PURE__*/function (_React$Component) {\n  _inherits(AddComment, _React$Component);\n\n  var _super = _createSuper(AddComment);\n\n  function AddComment() {\n    var _this;\n\n    _classCallCheck(this, AddComment);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      comment: {\n        user_name: \"\",\n        message: \"\"\n      },\n      score: []\n    };\n    _this.postComment = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.post(\"http://localhost:3000/comments\", _this.comment);\n\n            case 2:\n              res = _context.sent;\n              _this.state = _objectSpread({}, res);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.getUserIdIfExists = function () {\n      var currID = jwtService.getCurrUser()._id;\n\n      if (currID) return currID;else {\n        // guest id = 2\n        return 2;\n      }\n    };\n\n    _this.handleSubmit = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n        var errorMessage, addComment, response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                e.preventDefault();\n\n                if (!(_this.state.comment.message == \"\" || _this.state.comment.user_name == \"\")) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                alert(\"אנא הזן תגובה ושם משתמש  :) \");\n                _context2.next = 21;\n                break;\n\n              case 5:\n                addComment = _this.props.addComment;\n                addComment({\n                  _id: null,\n                  product_id: _this.props.product_id,\n                  user_id: jwtService.getCurrUser()._id,\n                  user_name: _this.state.comment.user_name,\n                  message: _this.state.comment.message,\n                  score: _this.state.score,\n                  date: \"Added just now...\"\n                });\n                _context2.prev = 7;\n                console.log(_this.props);\n                _context2.next = 11;\n                return httpService.addComment({\n                  product_id: _this.props.product_id,\n                  user_id: 2,\n                  user_name: _this.state.comment.user_name,\n                  message: _this.state.comment.message,\n                  score: _this.state.score,\n                  date: \"Added just now...\"\n                });\n\n              case 11:\n                response = _context2.sent;\n                // reset\n                _this.state.comment.user_name = \"\";\n                _this.state.comment.message = \"\";\n                _this.state.score = [];\n                alert(response.data);\n                _context2.next = 21;\n                break;\n\n              case 18:\n                _context2.prev = 18;\n                _context2.t0 = _context2[\"catch\"](7);\n                alert(_context2.t0);\n\n              case 21:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[7, 18]]);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.handleTextChange = function (e) {\n      var comment = _objectSpread({}, _this.state.comment);\n\n      comment[e.currentTarget.name] = e.currentTarget.value;\n\n      _this.setState({\n        comment\n      });\n\n      console.log(comment);\n    };\n\n    _this.handleRateChange = function (e) {\n      var exists = false;\n      var score = _this.state.score;\n\n      if (_this.state.score.length > 0) {\n        _this.state.score.forEach(function (element) {\n          if (element.title == e.title) {\n            element.value = e.value;\n            exists = true;\n          }\n        });\n      }\n\n      if (e.value && !exists) {\n        score.push({\n          title: e.title,\n          value: e.value\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(AddComment, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(jwtService.getCurrUser().name);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          maxWidth: \"70%\",\n          maxHeight: \"30%\",\n          paddingRight: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(MDBCard, {\n        className: \"mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginRight: 30,\n          marginTop: 10,\n          marginBottom: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \" position-relative text-center black-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }\n      }, \"\\u05D4\\u05D5\\u05E1\\u05E3 \\u05EA\\u05D2\\u05D5\\u05D1\\u05D4\"), /*#__PURE__*/React.createElement(MDBRow, {\n        className: \"ml-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }\n      }, jwtService.getCurrUser().name && /*#__PURE__*/React.createElement(MDBInput, {\n        size: \"lg\",\n        background: true,\n        label: \"\\u05E9\\u05DD \\u05DE\\u05E9\\u05EA\\u05DE\\u05E9\",\n        type: \"text\",\n        ref: this.title,\n        name: \"user_name\",\n        value: jwtService.getCurrUser().name,\n        disabled: true,\n        onChange: this.handleTextChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }), !jwtService.getCurrUser().name && /*#__PURE__*/React.createElement(MDBInput, {\n        size: \"lg\",\n        background: true,\n        label: \"\\u05E9\\u05DD \\u05DE\\u05E9\\u05EA\\u05DE\\u05E9\",\n        type: \"text\",\n        ref: this.title,\n        name: \"user_name\",\n        value: this.state.comment.user_name,\n        onChange: this.handleTextChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: \"90%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(MDBInput, {\n        background: true,\n        label: \"\\u05EA\\u05D2\\u05D5\\u05D1\\u05D4\",\n        type: \"textarea\",\n        ref: this.title,\n        name: \"message\",\n        value: this.state.comment.message,\n        onChange: this.handleTextChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }\n      }, _.chunk(this.props.commentsCategories, 5).map(function (categories, index) {\n        return /*#__PURE__*/React.createElement(MDBCol, {\n          size: \"lg\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 19\n          }\n        }, categories.map(function (category, index) {\n          return /*#__PURE__*/React.createElement(MDBRow, {\n            key: index,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(\"h6\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 25\n            }\n          }, category), /*#__PURE__*/React.createElement(MDBRating, {\n            iconSize: \"1x\",\n            key: index * 100,\n            fillColors: [\"red-text\", \"orange-text\", \"yellow-text\", \"lime-text\", \"light-green-text\"],\n            data: [{\n              tooltip: category\n            }, {\n              tooltip: category\n            }, {\n              tooltip: category\n            }, {\n              tooltip: category\n            }, {\n              tooltip: category\n            }],\n            getValue: _this2.handleRateChange.bind(category),\n            name: category,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 25\n            }\n          }));\n        }));\n      })), /*#__PURE__*/React.createElement(MDBRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(MDBBtn, {\n        color: \"white\",\n        className: \"text-center\",\n        onClick: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 17\n        }\n      }, \"\\u05D4\\u05D2\\u05D1\"))))));\n    }\n  }]);\n\n  return AddComment;\n}(React.Component);\n\nexport default AddComment;","map":{"version":3,"sources":["C:/Users/עומר/Desktop/Extra/React/canabiz/src/components/AddComment.jsx"],"names":["React","axios","httpService","_","MDBBtn","MDBContainer","MDBCard","MDBInput","MDBRating","MDBTable","MDBRow","MDBCol","MDBCardTitle","jwtService","AddComment","state","comment","user_name","message","score","postComment","post","res","getUserIdIfExists","currID","getCurrUser","_id","handleSubmit","e","preventDefault","alert","addComment","props","product_id","user_id","date","console","log","response","data","handleTextChange","currentTarget","name","value","setState","handleRateChange","exists","length","forEach","element","title","push","maxWidth","maxHeight","paddingRight","marginRight","marginTop","marginBottom","width","chunk","commentsCategories","map","categories","index","category","tooltip","bind","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport httpService from \"../services/httpService\";\r\nimport _ from \"lodash\";\r\n\r\nimport {\r\n  MDBBtn,\r\n  MDBContainer,\r\n  MDBCard,\r\n  MDBInput,\r\n  MDBRating,\r\n  MDBTable,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBCardTitle,\r\n} from \"mdbreact\";\r\nimport jwtService from \"../services/jwtService\";\r\n\r\nclass AddComment extends React.Component {\r\n  state = {\r\n    comment: {\r\n      user_name: \"\",\r\n      message: \"\",\r\n    },\r\n    score: [],\r\n  };\r\n\r\n  postComment = async () => {\r\n    const res = await axios.post(\r\n      \"http://localhost:3000/comments\",\r\n      this.comment\r\n    );\r\n\r\n    this.state = { ...res };\r\n  };\r\n\r\n  getUserIdIfExists = () => {\r\n    let currID = jwtService.getCurrUser()._id;\r\n    if (currID) return currID;\r\n    else {\r\n      // guest id = 2\r\n      return 2;\r\n    }\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    let errorMessage;\r\n    if (\r\n      this.state.comment.message == \"\" ||\r\n      this.state.comment.user_name == \"\"\r\n    ) {\r\n      alert(\"אנא הזן תגובה ושם משתמש  :) \");\r\n    } else {\r\n      const { addComment } = this.props;\r\n\r\n      addComment({\r\n        _id: null,\r\n        product_id: this.props.product_id,\r\n        user_id: jwtService.getCurrUser()._id,\r\n        user_name: this.state.comment.user_name,\r\n        message: this.state.comment.message,\r\n        score: this.state.score,\r\n        date: \"Added just now...\",\r\n      });\r\n\r\n      try {\r\n        console.log(this.props);\r\n        const response = await httpService.addComment({\r\n          product_id: this.props.product_id,\r\n          user_id: 2,\r\n          user_name: this.state.comment.user_name,\r\n          message: this.state.comment.message,\r\n          score: this.state.score,\r\n          date: \"Added just now...\",\r\n        });\r\n\r\n        // reset\r\n        this.state.comment.user_name = \"\";\r\n        this.state.comment.message = \"\";\r\n        this.state.score = [];\r\n        alert(response.data);\r\n      } catch (e) {\r\n        alert(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleTextChange = (e) => {\r\n    const comment = { ...this.state.comment };\r\n    comment[e.currentTarget.name] = e.currentTarget.value;\r\n    this.setState({ comment });\r\n    console.log(comment);\r\n  };\r\n\r\n  handleRateChange = (e) => {\r\n    var exists = false;\r\n    const score = this.state.score;\r\n    if (this.state.score.length > 0) {\r\n      this.state.score.forEach((element) => {\r\n        if (element.title == e.title) {\r\n          element.value = e.value;\r\n          exists = true;\r\n        }\r\n      });\r\n    }\r\n\r\n    if (e.value && !exists) {\r\n      score.push({ title: e.title, value: e.value });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    console.log(jwtService.getCurrUser().name);\r\n\r\n    return (\r\n      <div style={{ maxWidth: \"70%\", maxHeight: \"30%\", paddingRight: 5 }}>\r\n        <MDBCard className=\"mt-5\">\r\n          <div\r\n            style={{\r\n              marginRight: 30,\r\n              marginTop: 10,\r\n              marginBottom: 10,\r\n            }}\r\n          >\r\n            <h4 className=\" position-relative text-center black-text\">\r\n              הוסף תגובה\r\n            </h4>\r\n            <MDBRow className=\"ml-3\">\r\n              {jwtService.getCurrUser().name && (\r\n                <MDBInput\r\n                  size=\"lg\"\r\n                  background\r\n                  label=\"שם משתמש\"\r\n                  type=\"text\"\r\n                  ref={this.title}\r\n                  name=\"user_name\"\r\n                  value={jwtService.getCurrUser().name}\r\n                  disabled\r\n                  onChange={this.handleTextChange}\r\n                ></MDBInput>\r\n              )}\r\n              {!jwtService.getCurrUser().name && (\r\n                <MDBInput\r\n                  size=\"lg\"\r\n                  background\r\n                  label=\"שם משתמש\"\r\n                  type=\"text\"\r\n                  ref={this.title}\r\n                  name=\"user_name\"\r\n                  value={this.state.comment.user_name}\r\n                  onChange={this.handleTextChange}\r\n                ></MDBInput>\r\n              )}\r\n            </MDBRow>\r\n            <MDBRow>\r\n              <div style={{ width: \"90%\" }}>\r\n                <MDBInput\r\n                  background\r\n                  label=\"תגובה\"\r\n                  type=\"textarea\"\r\n                  ref={this.title}\r\n                  name=\"message\"\r\n                  value={this.state.comment.message}\r\n                  onChange={this.handleTextChange}\r\n                ></MDBInput>\r\n              </div>\r\n            </MDBRow>\r\n            <MDBRow>\r\n              {_.chunk(this.props.commentsCategories, 5).map(\r\n                (categories, index) => (\r\n                  <MDBCol size=\"lg\">\r\n                    {categories.map((category, index) => (\r\n                      <MDBRow key={index}>\r\n                        <h6>{category}</h6>\r\n                        <MDBRating\r\n                          iconSize=\"1x\"\r\n                          key={index * 100}\r\n                          fillColors={[\r\n                            \"red-text\",\r\n                            \"orange-text\",\r\n                            \"yellow-text\",\r\n                            \"lime-text\",\r\n                            \"light-green-text\",\r\n                          ]}\r\n                          data={[\r\n                            {\r\n                              tooltip: category,\r\n                            },\r\n                            {\r\n                              tooltip: category,\r\n                            },\r\n                            {\r\n                              tooltip: category,\r\n                            },\r\n                            {\r\n                              tooltip: category,\r\n                            },\r\n                            {\r\n                              tooltip: category,\r\n                            },\r\n                          ]}\r\n                          getValue={this.handleRateChange.bind(category)}\r\n                          name={category}\r\n                        />\r\n                      </MDBRow>\r\n                    ))}\r\n                  </MDBCol>\r\n                )\r\n              )}\r\n            </MDBRow>\r\n            <MDBRow>\r\n              <div className=\"text-center\">\r\n                <MDBBtn\r\n                  color=\"white\"\r\n                  className=\"text-center\"\r\n                  onClick={this.handleSubmit}\r\n                >\r\n                  הגב\r\n                </MDBBtn>\r\n              </div>\r\n            </MDBRow>\r\n          </div>\r\n        </MDBCard>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddComment;\r\n"]},"metadata":{},"sourceType":"module"}