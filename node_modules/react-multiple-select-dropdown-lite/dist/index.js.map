{"version":3,"file":"index.js","sources":["../src/CloseIcon.jsx","../src/DownIcon.jsx","../src/Options.jsx","../src/index.js"],"sourcesContent":["import React from 'react'\n\nexport default function CloseIcon() {\n  return (\n    <svg className='msl-close-icn'>\n      <line x1='0' y1='0' x2='15' y2='15' />\n      <line x1='0' y1='15' x2='15' y2='0' />\n    </svg>\n  )\n}\n","import React from 'react'\n\nexport default function DownIcon() {\n  return (\n    <svg className='msl-arrow-icn'>\n      <line x1='10' y1='15' x2='2' y2='7' />\n      <line x1='18' y1='7' x2='10' y2='15' />\n    </svg>\n  )\n}\n","import React from 'react'\n\nfunction Options({ opts, singleSelect, addValue, checkValueExist, value }) {\n  const optsArr = []\n  function addInArr(opts) {\n    for (const [i, opt] of opts.entries()) {\n      if (opt.type === 'group') {\n        optsArr.push(\n          <div key={opt.title + i} data-msl className='msl-grp-title'>\n            {opt.title}\n          </div>\n        )\n        if (opt.childs.length > 0) {\n          addInArr(opt.childs)\n        } else {\n          optsArr.push(\n            <option className='msl-option msl-option-disable'>\n              {opt.emptyDataLabel || 'No Data Found'}\n            </option>\n          )\n        }\n      } else {\n        optsArr.push(\n          <option\n            tabIndex='0'\n            key={opt.value + opt.label + i + 10}\n            {...(!singleSelect && { 'data-msl': true })}\n            style={{\n              ...(opt.style && opt.style)\n            }}\n            onClick={() => {\n              !opt.disabled && addValue(opt)\n            }}\n            onKeyPress={(e) => {\n              e.key === 'Enter' && !opt.disabled && addValue(opt)\n            }}\n            title={opt.label}\n            className={`msl-option\n             ${checkValueExist(opt, value) ? 'msl-option-active' : ''} \n              ${opt.disabled ? 'msl-option-disable' : ''} ${\n              opt.classes !== undefined ? opt.classes : ''\n              }`}\n            value={opt.value}\n          >\n            {opt.label}\n          </option>\n        )\n      }\n    }\n  }\n  addInArr(opts)\n  return optsArr\n}\n\nexport default Options\n","/* eslint-disable no-labels */\nimport React, { useState, useEffect } from 'react'\nimport CloseIcon from './CloseIcon.jsx'\nimport DownIcon from './DownIcon.jsx'\nimport Options from './Options'\nimport './styles.css'\n\nMultiSelect.defaultProps = {\n  clearable: true,\n  downArrow: true,\n  width: 300,\n  singleSelect: false,\n  jsonValue: false,\n  defaultValue: '',\n  disableChip: false,\n  name: '',\n  disabled: false,\n  limit: null,\n  emptyDataLabel: 'No Data Found',\n  placeholder: 'Select...',\n  onChange: () => {},\n  options: [\n    {\n      label: 'Empty',\n      value: '',\n      disabled: true,\n      style: { textAlign: 'center' }\n    }\n  ],\n  customValue: false\n}\n\nfunction MultiSelect({\n  options: userOptions,\n  width,\n  downArrowIcon,\n  closeIcon,\n  clearable,\n  downArrow,\n  onChange,\n  singleSelect,\n  jsonValue,\n  defaultValue,\n  className,\n  placeholder,\n  disableChip,\n  name,\n  attr,\n  disabled,\n  limit,\n  emptyDataLabel,\n  customValue\n}) {\n  const [menuOpen, setMenuOpen] = useState(false)\n  const [value, setValue] = useState([])\n  const [options, setOptions] = useState(userOptions || [])\n  const [search, setSearch] = useState(null)\n\n  let stopPropagation = true\n\n  const preparDefaultValue = (defaultValue) => {\n    let defaultValArr = defaultValue\n    if (typeof defaultValue === 'string') {\n      defaultValArr = defaultValue.split(',')\n    }\n    const optionString = JSON.stringify(options)\n    const extraValues = []\n\n    const setExtraValue = (value) => {\n      extraValues.push({ label: value, value })\n      return { label: value, value }\n    }\n\n    const defaultValueObj = []\n\n    for (const value of defaultValArr) {\n      const matchedVals = optionString.match(\n        new RegExp(\n          `{+?.[^{]*?\"${value\n            .replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&') // escape special chars\n            .replace(/\"/g, '\\\\\\\\$&')}\"}`, // escape \" as \\\\\n          'g'\n        )\n      )\n\n      if (matchedVals) {\n        if (matchedVals.length === 1) {\n          defaultValueObj.push(JSON.parse(matchedVals))\n        } else if (matchedVals.length > 1) {\n          defaultValueObj.push(JSON.parse(`[${matchedVals.join(',')}]`))\n        }\n      } else if (value !== '' && value !== null && customValue) {\n        setExtraValue(value)\n        defaultValueObj.push({ label: value, value })\n      }\n    }\n\n    setOptions([...options, ...extraValues])\n    return defaultValueObj\n  }\n\n  const filterExtraCustomVal = (valArrObj) => {\n    const optionString = JSON.stringify(options)\n    return valArrObj.filter(\n      (obj) =>\n        !JSON.parse(\n          optionString.match(new RegExp(`{+?.[^{]*?${obj.value}\"}`, 'g'))\n        )\n    )\n  }\n\n  useEffect(() => {\n    let preDefinedValue = []\n    if (defaultValue !== '' || defaultValue.length > 0) {\n      // when default value is string and value separated comma\n      if (typeof defaultValue === 'string') {\n        preDefinedValue = preparDefaultValue(defaultValue)\n        if (singleSelect && preDefinedValue.length > 1) {\n          preDefinedValue = [preDefinedValue[0]]\n        }\n      } else if (\n        Array.isArray(defaultValue) &&\n        defaultValue.length > 0 &&\n        typeof defaultValue[0] !== 'string'\n      ) {\n        // when default value is array of object\n        preDefinedValue = defaultValue // set array as default\n        const extraValue = filterExtraCustomVal(defaultValue)\n        setOptions([...options, ...extraValue])\n        if (singleSelect && preDefinedValue.length > 1) {\n          preDefinedValue = [preDefinedValue[0]]\n        }\n      } else if (Array.isArray(defaultValue) && defaultValue.length > 0) {\n        // when default value is array of string\n        preDefinedValue = preparDefaultValue(defaultValue)\n        if (singleSelect && preDefinedValue.length > 1) {\n          preDefinedValue = [preDefinedValue[0]]\n        }\n      }\n    }\n    setValue(preDefinedValue)\n  }, [defaultValue])\n\n  const setNewValue = (val) => {\n    setValue(val)\n    if (jsonValue) {\n      onChange(val)\n    } else {\n      let stringvalue = ''\n      stringvalue += val.map((itm) => itm.value)\n      onChange(stringvalue)\n    }\n  }\n\n  const openMenu = () => {\n    setMenuOpen(true)\n  }\n\n  const closeMenu = () => {\n    setMenuOpen(false)\n  }\n\n  const inputRefFocus = (e, focus) => {\n    let parentNode = null\n    let inputNode = null\n    if (e.target.hasAttribute('data-msl')) {\n      parentNode = e.target\n    } else if (e.target.parentNode.hasAttribute('data-msl')) {\n      parentNode = e.target.parentNode\n    } else if (e.target.parentNode.parentNode.hasAttribute('data-msl')) {\n      parentNode = e.target.parentNode.parentNode\n    } else if (\n      e.target.parentNode.parentNode.parentNode.hasAttribute('data-msl')\n    ) {\n      parentNode = e.target.parentNode.parentNode.parentNode\n    } else if (\n      e.target.parentNode.parentNode.parentNode.parentNode.hasAttribute(\n        'data-msl'\n      )\n    ) {\n      parentNode = e.target.parentNode.parentNode.parentNode.parentNode\n    }\n    if (parentNode !== null) {\n      inputNode = parentNode.querySelector('.msl-input')\n    }\n\n    if (inputNode !== null) {\n      focus ? inputNode.focus() : inputNode.blur()\n    }\n  }\n\n  const handleMenuBtn = (e) => {\n    stopPropagation = false\n    if (menuOpen) {\n      document.removeEventListener('click', handleMenu)\n      inputRefFocus(e, false)\n      closeMenu()\n    } else {\n      inputRefFocus(e, true)\n      openMenu()\n      document.addEventListener('click', handleMenu)\n    }\n  }\n\n  const handleMenu = (e) => {\n    if (!openable(e)) {\n      document.removeEventListener('click', handleMenu)\n      closeMenu()\n    } else {\n      openMenu()\n    }\n  }\n\n  const openable = (e) => {\n    if (e.target.hasAttribute('data-msl')) {\n      return true\n    }\n    return false\n  }\n\n  const handleOutsideClick = (e) => {\n    if (openable(e)) {\n      if (!menuOpen) {\n        document.addEventListener('click', handleOutsideClick)\n      }\n      inputRefFocus(e, true)\n      openMenu()\n    } else {\n      closeMenu()\n      document.removeEventListener('click', handleOutsideClick)\n    }\n  }\n\n  const handleClickInput = (e) => {\n    if (stopPropagation) {\n      handleOutsideClick(e)\n    }\n  }\n\n  const checkValueExist = (value, arr) => {\n    const bool = arr.some((itm) => itm.value === value.value)\n    return bool\n  }\n\n  const filterCreateOpt = ({ label, value }) => {\n    if (label.match(/Create \"|\"+/g)) {\n      label = label.replace(/Create \"|\"+/g, '')\n    }\n    return { label, value }\n  }\n\n  const addValue = (newValObj) => {\n    newValObj = filterCreateOpt(newValObj)\n    let tmp = [...value]\n    if (singleSelect) {\n      tmp = [newValObj]\n    } else {\n      if (!checkValueExist(newValObj, value)) {\n        if (limit === null) {\n          tmp.push(newValObj)\n        } else if (limit > value.length) {\n          tmp.push(newValObj)\n        }\n      } else {\n        tmp = tmp.filter((itm) => itm.value !== newValObj.value)\n      }\n    }\n    setNewValue(tmp)\n    setSearch(null)\n    document.querySelector('.msl-input').innerHTML = ''\n  }\n\n  const deleteValue = (i) => {\n    const tmp = [...value]\n    tmp.splice(i, 1)\n    setNewValue(tmp)\n  }\n\n  const clearValue = () => {\n    setNewValue([])\n  }\n  const showSearchOption = () => {\n    if (!singleSelect && !disableChip) {\n      return true\n    } else if (singleSelect && !value.length) {\n      return true\n    } else if (!singleSelect && disableChip && !value.length) {\n      return true\n    }\n    return false\n  }\n\n  const searchValue = (e) => {\n    const textValue = e.target.textContent.trim().replace(/,+/g, '')\n\n    if (textValue) {\n      const newValue = {\n        label: `Create \"${textValue}\"`,\n        value: textValue\n      }\n\n      const optionsString = JSON.stringify(options)\n\n      const searchedOptions = optionsString.match(\n        new RegExp(\n          `{\"label\":+?.[^{]*?(${textValue.replace(\n            /[-[\\]{}()*+?.,\\\\^$|#\\s]/g,\n            '\\\\$&'\n          )})+?.[^{]*?}`,\n          'gi'\n        )\n      )\n\n      if (searchedOptions) {\n        const searchedOptionsArr = JSON.parse(`[${searchedOptions}]`)\n\n        if (customValue) {\n          const exactOptionValue = optionsString.match(\n            new RegExp(\n              `{\"label\":(.[^{]*?)\"value\":\"${textValue.replace(\n                /[-[\\]{}()*+?.,\\\\^$|#\\s]/g,\n                '\\\\$&'\n              )}\"}`,\n              'gi'\n            )\n          )\n\n          !exactOptionValue && searchedOptionsArr.push(newValue)\n        }\n        setSearch(searchedOptionsArr)\n      } else {\n        customValue ? setSearch([newValue]) : setSearch([])\n      }\n\n      if (e.key === 'Enter' || e.key === ',') {\n        if (\n          customValue &&\n          !searchedOptions &&\n          !checkValueExist(filterCreateOpt(newValue), value)\n        ) {\n          setOptions([...options, filterCreateOpt(newValue)])\n          addValue(newValue)\n        } else {\n          search.length > 0 && addValue(search[0])\n        }\n      }\n    } else {\n      setSearch(null)\n    }\n  }\n\n  return (\n    <div\n      {...attr}\n      onClick={handleClickInput}\n      style={{ width }}\n      className={`msl-wrp msl-vars ${className} ${\n        disabled ? 'msl-disabled' : ''\n      }`}\n    >\n      <input name={name} type='hidden' value={value.map((itm) => itm.value)} />\n      <div data-msl className={`msl ${menuOpen ? 'msl-active' : ''} `}>\n        <div\n          data-msl\n          className='msl-input-wrp'\n          style={{\n            marginRight:\n              clearable && downArrow ? 60 : downArrow || clearable ? 40 : 5\n          }}\n        >\n          {!singleSelect &&\n            !disableChip &&\n            value.map((val, i) => (\n              <div key={`msl-chip-${i + 11}`} className='msl-chip'>\n                {val.label}\n                <div\n                  role='button'\n                  aria-label='delete-value'\n                  onClick={() => deleteValue(i)}\n                  className='msl-btn msl-chip-delete msl-flx'\n                >\n                  <CloseIcon />\n                </div>\n                <span />\n              </div>\n            ))}\n          {!singleSelect && disableChip && value.length === 1 ? (\n            <span\n              className='msl-single-value'\n              data-msl\n              style={{\n                width:\n                  width -\n                  (clearable && downArrow\n                    ? 60\n                    : downArrow || clearable\n                    ? 40\n                    : 5)\n              }}\n            >\n              {value[0].label}d\n            </span>\n          ) : (\n            disableChip &&\n            value.length > 1 && (\n              <span\n                className='msl-single-value'\n                data-msl\n                style={{\n                  width:\n                    width -\n                    (clearable && downArrow\n                      ? 60\n                      : downArrow || clearable\n                      ? 40\n                      : 5)\n                }}\n              >\n                {value.length} Selected\n              </span>\n            )\n          )}\n          {singleSelect && value.length === 1 && (\n            <span\n              className='msl-single-value'\n              data-msl\n              style={{\n                width:\n                  width -\n                  (clearable && downArrow\n                    ? 60\n                    : downArrow || clearable\n                    ? 40\n                    : 5)\n              }}\n            >\n              {value[0].label}\n            </span>\n          )}\n          {showSearchOption() && (\n            <div\n              data-msl\n              data-placeholder={placeholder}\n              className='msl-input'\n              contentEditable={!disabled}\n              onKeyUp={searchValue}\n            />\n          )}\n        </div>\n        {(clearable || downArrow) && (\n          <div className='msl-actions msl-flx'>\n            {clearable && value.length > 0 && (\n              <div\n                role='button'\n                aria-label='close-menu'\n                onClick={clearValue}\n                className='msl-btn msl-clear-btn msl-flx'\n              >\n                {closeIcon || <CloseIcon />}\n              </div>\n            )}\n            {downArrow && (\n              <div\n                role='button'\n                aria-label='toggle-menu'\n                onClick={handleMenuBtn}\n                className='msl-btn msl-arrow-btn msl-flx'\n                style={{ ...(menuOpen && { transform: 'rotate(180deg)' }) }}\n              >\n                {downArrowIcon || <DownIcon />}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n      <div className='msl-options'>\n        {menuOpen && !search && options.length ? (\n          <Options\n            opts={options}\n            {...{ singleSelect, addValue, checkValueExist, value }}\n          />\n        ) : (search && !search?.length) || (options && !options.length) ? (\n          <option className='msl-option msl-option-disable'>\n            {emptyDataLabel}\n          </option>\n        ) : (\n          search && (\n            <Options\n              opts={search}\n              {...{ singleSelect, addValue, checkValueExist, value }}\n            />\n          )\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default MultiSelect\n"],"names":["CloseIcon","React","className","x1","y1","x2","y2","DownIcon","Options","singleSelect","addValue","checkValueExist","value","optsArr","addInArr","opts","i","opt","type","push","key","title","data-msl","childs","length","emptyDataLabel","tabIndex","label","style","onClick","disabled","onKeyPress","e","undefined","classes","entries","MultiSelect","userOptions","options","width","downArrowIcon","closeIcon","clearable","downArrow","onChange","jsonValue","defaultValue","placeholder","disableChip","name","attr","limit","customValue","useState","menuOpen","setMenuOpen","setValue","setOptions","search","setSearch","stopPropagation","preparDefaultValue","defaultValArr","split","optionString","JSON","stringify","extraValues","setExtraValue","defaultValueObj","matchedVals","match","RegExp","replace","parse","join","useEffect","valArrObj","preDefinedValue","Array","isArray","extraValue","filter","obj","setNewValue","val","stringvalue","map","itm","openMenu","closeMenu","inputRefFocus","focus","parentNode","inputNode","target","hasAttribute","querySelector","blur","handleMenu","openable","document","removeEventListener","arr","some","filterCreateOpt","newValObj","tmp","innerHTML","handleOutsideClick","addEventListener","marginRight","role","aria-label","splice","deleteValue","data-placeholder","contentEditable","onKeyUp","textValue","textContent","trim","newValue","optionsString","searchedOptions","searchedOptionsArr","transform","defaultProps","textAlign"],"mappings":"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"}